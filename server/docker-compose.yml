version: '3.8'

services:
  word-duel-server:
    build: .
    container_name: word-duel-server
    restart: unless-stopped
    ports:
      - "3001:3001"
    environment:
      - NODE_ENV=production
      - PORT=3001
      - HOST=0.0.0.0
      - CORS_ORIGIN=https://yourdomain.com
      - LOG_LEVEL=info
      - RATE_LIMIT_WINDOW_MS=900000
      - RATE_LIMIT_MAX_REQUESTS=100
    volumes:
      - ./logs:/app/logs
      - ./validWords.json:/app/validWords.json:ro
    networks:
      - word-duel-network
    healthcheck:
      test: ["CMD", "node", "-e", "require('http').get('http://localhost:3001/health', (res) => { process.exit(res.statusCode === 200 ? 0 : 1) })"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Optional: Redis for session storage and caching
  # redis:
  #   image: redis:7-alpine
  #   container_name: word-duel-redis
  #   restart: unless-stopped
  #   ports:
  #     - "6379:6379"
  #   volumes:
  #     - redis_data:/data
  #   networks:
  #     - word-duel-network
  #   command: redis-server --appendonly yes

  # Optional: Nginx reverse proxy
  # nginx:
  #   image: nginx:alpine
  #   container_name: word-duel-nginx
  #   restart: unless-stopped
  #   ports:
  #     - "80:80"
  #     - "443:443"
  #   volumes:
  #     - ./nginx.conf:/etc/nginx/nginx.conf:ro
  #     - ./ssl:/etc/nginx/ssl:ro
  #   depends_on:
  #     - word-duel-server
  #   networks:
  #     - word-duel-network

networks:
  word-duel-network:
    driver: bridge

# volumes:
#   redis_data:
